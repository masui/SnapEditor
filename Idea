ドラッギングだけで
Furnasの提唱するEfficient View Traversability(EVT)を
実現できるという点を指摘すればよいだろう。
(木構造の上部に登る必要が無い)

Furnas:ViewNavigation
http://www.acm.org/sigchi/chi97/proceedings/paper/gwf.htm


適応的スナッピング

	★ 動かした距離によりスナッピングが変わる
	   ・少し動かすと微調整、沢山動かすとスナップ
	   ・ある程度以上移動するとスナッピング
	   ・ある程度以上回転するとスナッピング
	   ・遠くに移動した場合はそれなりの大きさのグリッドにスナッピング
	   ・何もないところで回転すると0度、90度などでスナッピング
	   ・拡大操作も同様にする
	   ・スナップの技法 - 本田式
	
	★ 周囲との関係によりスナッピングが変わる
	   ・何かにぶつかるとStickyにスナッピング
		▲ 本田方式と同じ

	★ 前のスナップ点を基準に
	  ・グリッドオブジェクト
		グリッドオブジェクトを操作するとグリッドが変わる
	   前のオブジェクトサイズを基準に  グリッドを書く
	   = 何でもグリッドオブジェクトになる
		あんまり役にたたない...
	   前に自由に動かしたオブジェクトを基準にする方法はうまくいく

		■■■	  右二つをスナップした場合、左が基準で右はその子供
		  ■■■	左の■を動かすと右図のようになり
		■ ■ ■	右の■を動かすと左図のようになる
		■
		  ■
		    ■		こんな風になったりする

		Copy Rect1
		Paste
		Snap to Rect1
		Rotate 10
		Copy Rect2
		Paste
		<Repeat> ==>	Snap to Rect2
				Rotate 10

	★ 次の動作の指示
		アニメーション
			たいへんうっとうしい
	  回転するのか拡大するのかわかる
		but これはカーソルの形を変化させる方法などでおなじみ

	★ 見えないスナップオブジェクトが使えないか

	★ 予測に使用できないか
	   ・Repeat操作


